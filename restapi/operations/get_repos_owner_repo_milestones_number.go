// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetReposOwnerRepoMilestonesNumberHandlerFunc turns a function with the right signature into a get repos owner repo milestones number handler
type GetReposOwnerRepoMilestonesNumberHandlerFunc func(GetReposOwnerRepoMilestonesNumberParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetReposOwnerRepoMilestonesNumberHandlerFunc) Handle(params GetReposOwnerRepoMilestonesNumberParams) middleware.Responder {
	return fn(params)
}

// GetReposOwnerRepoMilestonesNumberHandler interface for that can handle valid get repos owner repo milestones number params
type GetReposOwnerRepoMilestonesNumberHandler interface {
	Handle(GetReposOwnerRepoMilestonesNumberParams) middleware.Responder
}

// NewGetReposOwnerRepoMilestonesNumber creates a new http.Handler for the get repos owner repo milestones number operation
func NewGetReposOwnerRepoMilestonesNumber(ctx *middleware.Context, handler GetReposOwnerRepoMilestonesNumberHandler) *GetReposOwnerRepoMilestonesNumber {
	return &GetReposOwnerRepoMilestonesNumber{Context: ctx, Handler: handler}
}

/*GetReposOwnerRepoMilestonesNumber swagger:route GET /repos/{owner}/{repo}/milestones/{number} getReposOwnerRepoMilestonesNumber

Get a single milestone.

*/
type GetReposOwnerRepoMilestonesNumber struct {
	Context *middleware.Context
	Handler GetReposOwnerRepoMilestonesNumberHandler
}

func (o *GetReposOwnerRepoMilestonesNumber) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetReposOwnerRepoMilestonesNumberParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
