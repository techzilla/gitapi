// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PutTeamsTeamIDMembersUsernameHandlerFunc turns a function with the right signature into a put teams team ID members username handler
type PutTeamsTeamIDMembersUsernameHandlerFunc func(PutTeamsTeamIDMembersUsernameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutTeamsTeamIDMembersUsernameHandlerFunc) Handle(params PutTeamsTeamIDMembersUsernameParams) middleware.Responder {
	return fn(params)
}

// PutTeamsTeamIDMembersUsernameHandler interface for that can handle valid put teams team ID members username params
type PutTeamsTeamIDMembersUsernameHandler interface {
	Handle(PutTeamsTeamIDMembersUsernameParams) middleware.Responder
}

// NewPutTeamsTeamIDMembersUsername creates a new http.Handler for the put teams team ID members username operation
func NewPutTeamsTeamIDMembersUsername(ctx *middleware.Context, handler PutTeamsTeamIDMembersUsernameHandler) *PutTeamsTeamIDMembersUsername {
	return &PutTeamsTeamIDMembersUsername{Context: ctx, Handler: handler}
}

/*PutTeamsTeamIDMembersUsername swagger:route PUT /teams/{teamId}/members/{username} putTeamsTeamIdMembersUsername

The API (described below) is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Add team membership API instead. It allows you to invite new organization members to your teams.

Add team member.
In order to add a user to a team, the authenticated user must have 'admin'
permissions to the team or be an owner of the org that the team is associated
with.


*/
type PutTeamsTeamIDMembersUsername struct {
	Context *middleware.Context
	Handler PutTeamsTeamIDMembersUsernameHandler
}

func (o *PutTeamsTeamIDMembersUsername) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutTeamsTeamIDMembersUsernameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
