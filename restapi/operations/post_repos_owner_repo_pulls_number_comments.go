// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostReposOwnerRepoPullsNumberCommentsHandlerFunc turns a function with the right signature into a post repos owner repo pulls number comments handler
type PostReposOwnerRepoPullsNumberCommentsHandlerFunc func(PostReposOwnerRepoPullsNumberCommentsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostReposOwnerRepoPullsNumberCommentsHandlerFunc) Handle(params PostReposOwnerRepoPullsNumberCommentsParams) middleware.Responder {
	return fn(params)
}

// PostReposOwnerRepoPullsNumberCommentsHandler interface for that can handle valid post repos owner repo pulls number comments params
type PostReposOwnerRepoPullsNumberCommentsHandler interface {
	Handle(PostReposOwnerRepoPullsNumberCommentsParams) middleware.Responder
}

// NewPostReposOwnerRepoPullsNumberComments creates a new http.Handler for the post repos owner repo pulls number comments operation
func NewPostReposOwnerRepoPullsNumberComments(ctx *middleware.Context, handler PostReposOwnerRepoPullsNumberCommentsHandler) *PostReposOwnerRepoPullsNumberComments {
	return &PostReposOwnerRepoPullsNumberComments{Context: ctx, Handler: handler}
}

/*PostReposOwnerRepoPullsNumberComments swagger:route POST /repos/{owner}/{repo}/pulls/{number}/comments postReposOwnerRepoPullsNumberComments

Create a comment.
  #TODO Alternative input ( http://developer.github.com/v3/pulls/comments/ )
  description: |
    Alternative Input.
    Instead of passing commit_id, path, and position you can reply to an
    existing Pull Request Comment like this:

        body
           Required string
        in_reply_to
           Required number - Comment id to reply to.


*/
type PostReposOwnerRepoPullsNumberComments struct {
	Context *middleware.Context
	Handler PostReposOwnerRepoPullsNumberCommentsHandler
}

func (o *PostReposOwnerRepoPullsNumberComments) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostReposOwnerRepoPullsNumberCommentsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
