// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// PostGistsCreatedCode is the HTTP code returned for type PostGistsCreated
const PostGistsCreatedCode int = 201

/*PostGistsCreated Created

swagger:response postGistsCreated
*/
type PostGistsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Gist `json:"body,omitempty"`
}

// NewPostGistsCreated creates PostGistsCreated with default headers values
func NewPostGistsCreated() *PostGistsCreated {
	return &PostGistsCreated{}
}

// WithPayload adds the payload to the post gists created response
func (o *PostGistsCreated) WithPayload(payload *models.Gist) *PostGistsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post gists created response
func (o *PostGistsCreated) SetPayload(payload *models.Gist) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGistsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGistsForbiddenCode is the HTTP code returned for type PostGistsForbidden
const PostGistsForbiddenCode int = 403

/*PostGistsForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response postGistsForbidden
*/
type PostGistsForbidden struct {
}

// NewPostGistsForbidden creates PostGistsForbidden with default headers values
func NewPostGistsForbidden() *PostGistsForbidden {
	return &PostGistsForbidden{}
}

// WriteResponse to the client
func (o *PostGistsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
