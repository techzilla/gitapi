// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetRateLimitOKCode is the HTTP code returned for type GetRateLimitOK
const GetRateLimitOKCode int = 200

/*GetRateLimitOK OK

swagger:response getRateLimitOK
*/
type GetRateLimitOK struct {

	/*
	  In: Body
	*/
	Payload *models.RateLimit `json:"body,omitempty"`
}

// NewGetRateLimitOK creates GetRateLimitOK with default headers values
func NewGetRateLimitOK() *GetRateLimitOK {
	return &GetRateLimitOK{}
}

// WithPayload adds the payload to the get rate limit o k response
func (o *GetRateLimitOK) WithPayload(payload *models.RateLimit) *GetRateLimitOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rate limit o k response
func (o *GetRateLimitOK) SetPayload(payload *models.RateLimit) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRateLimitOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRateLimitForbiddenCode is the HTTP code returned for type GetRateLimitForbidden
const GetRateLimitForbiddenCode int = 403

/*GetRateLimitForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getRateLimitForbidden
*/
type GetRateLimitForbidden struct {
}

// NewGetRateLimitForbidden creates GetRateLimitForbidden with default headers values
func NewGetRateLimitForbidden() *GetRateLimitForbidden {
	return &GetRateLimitForbidden{}
}

// WriteResponse to the client
func (o *GetRateLimitForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
