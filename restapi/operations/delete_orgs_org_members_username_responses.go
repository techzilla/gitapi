// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteOrgsOrgMembersUsernameNoContentCode is the HTTP code returned for type DeleteOrgsOrgMembersUsernameNoContent
const DeleteOrgsOrgMembersUsernameNoContentCode int = 204

/*DeleteOrgsOrgMembersUsernameNoContent No content.


swagger:response deleteOrgsOrgMembersUsernameNoContent
*/
type DeleteOrgsOrgMembersUsernameNoContent struct {
}

// NewDeleteOrgsOrgMembersUsernameNoContent creates DeleteOrgsOrgMembersUsernameNoContent with default headers values
func NewDeleteOrgsOrgMembersUsernameNoContent() *DeleteOrgsOrgMembersUsernameNoContent {
	return &DeleteOrgsOrgMembersUsernameNoContent{}
}

// WriteResponse to the client
func (o *DeleteOrgsOrgMembersUsernameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteOrgsOrgMembersUsernameForbiddenCode is the HTTP code returned for type DeleteOrgsOrgMembersUsernameForbidden
const DeleteOrgsOrgMembersUsernameForbiddenCode int = 403

/*DeleteOrgsOrgMembersUsernameForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response deleteOrgsOrgMembersUsernameForbidden
*/
type DeleteOrgsOrgMembersUsernameForbidden struct {
}

// NewDeleteOrgsOrgMembersUsernameForbidden creates DeleteOrgsOrgMembersUsernameForbidden with default headers values
func NewDeleteOrgsOrgMembersUsernameForbidden() *DeleteOrgsOrgMembersUsernameForbidden {
	return &DeleteOrgsOrgMembersUsernameForbidden{}
}

// WriteResponse to the client
func (o *DeleteOrgsOrgMembersUsernameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
