// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteTeamsTeamIDMembersUsernameHandlerFunc turns a function with the right signature into a delete teams team ID members username handler
type DeleteTeamsTeamIDMembersUsernameHandlerFunc func(DeleteTeamsTeamIDMembersUsernameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteTeamsTeamIDMembersUsernameHandlerFunc) Handle(params DeleteTeamsTeamIDMembersUsernameParams) middleware.Responder {
	return fn(params)
}

// DeleteTeamsTeamIDMembersUsernameHandler interface for that can handle valid delete teams team ID members username params
type DeleteTeamsTeamIDMembersUsernameHandler interface {
	Handle(DeleteTeamsTeamIDMembersUsernameParams) middleware.Responder
}

// NewDeleteTeamsTeamIDMembersUsername creates a new http.Handler for the delete teams team ID members username operation
func NewDeleteTeamsTeamIDMembersUsername(ctx *middleware.Context, handler DeleteTeamsTeamIDMembersUsernameHandler) *DeleteTeamsTeamIDMembersUsername {
	return &DeleteTeamsTeamIDMembersUsername{Context: ctx, Handler: handler}
}

/*DeleteTeamsTeamIDMembersUsername swagger:route DELETE /teams/{teamId}/members/{username} deleteTeamsTeamIdMembersUsername

The "Remove team member" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Remove team membership API instead. It allows you to remove both active and pending memberships.

Remove team member.
In order to remove a user from a team, the authenticated user must have 'admin'
permissions to the team or be an owner of the org that the team is associated
with.
NOTE This does not delete the user, it just remove them from the team.


*/
type DeleteTeamsTeamIDMembersUsername struct {
	Context *middleware.Context
	Handler DeleteTeamsTeamIDMembersUsernameHandler
}

func (o *DeleteTeamsTeamIDMembersUsername) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteTeamsTeamIDMembersUsernameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
