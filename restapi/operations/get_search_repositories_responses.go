// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetSearchRepositoriesOKCode is the HTTP code returned for type GetSearchRepositoriesOK
const GetSearchRepositoriesOKCode int = 200

/*GetSearchRepositoriesOK OK

swagger:response getSearchRepositoriesOK
*/
type GetSearchRepositoriesOK struct {

	/*
	  In: Body
	*/
	Payload *models.SearchRepositories `json:"body,omitempty"`
}

// NewGetSearchRepositoriesOK creates GetSearchRepositoriesOK with default headers values
func NewGetSearchRepositoriesOK() *GetSearchRepositoriesOK {
	return &GetSearchRepositoriesOK{}
}

// WithPayload adds the payload to the get search repositories o k response
func (o *GetSearchRepositoriesOK) WithPayload(payload *models.SearchRepositories) *GetSearchRepositoriesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search repositories o k response
func (o *GetSearchRepositoriesOK) SetPayload(payload *models.SearchRepositories) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchRepositoriesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSearchRepositoriesForbiddenCode is the HTTP code returned for type GetSearchRepositoriesForbidden
const GetSearchRepositoriesForbiddenCode int = 403

/*GetSearchRepositoriesForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getSearchRepositoriesForbidden
*/
type GetSearchRepositoriesForbidden struct {
}

// NewGetSearchRepositoriesForbidden creates GetSearchRepositoriesForbidden with default headers values
func NewGetSearchRepositoriesForbidden() *GetSearchRepositoriesForbidden {
	return &GetSearchRepositoriesForbidden{}
}

// WriteResponse to the client
func (o *GetSearchRepositoriesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
