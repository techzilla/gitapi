// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// PostUserReposCreatedCode is the HTTP code returned for type PostUserReposCreated
const PostUserReposCreatedCode int = 201

/*PostUserReposCreated Created

swagger:response postUserReposCreated
*/
type PostUserReposCreated struct {

	/*
	  In: Body
	*/
	Payload models.Repos `json:"body,omitempty"`
}

// NewPostUserReposCreated creates PostUserReposCreated with default headers values
func NewPostUserReposCreated() *PostUserReposCreated {
	return &PostUserReposCreated{}
}

// WithPayload adds the payload to the post user repos created response
func (o *PostUserReposCreated) WithPayload(payload models.Repos) *PostUserReposCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user repos created response
func (o *PostUserReposCreated) SetPayload(payload models.Repos) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserReposCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Repos, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PostUserReposForbiddenCode is the HTTP code returned for type PostUserReposForbidden
const PostUserReposForbiddenCode int = 403

/*PostUserReposForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response postUserReposForbidden
*/
type PostUserReposForbidden struct {
}

// NewPostUserReposForbidden creates PostUserReposForbidden with default headers values
func NewPostUserReposForbidden() *PostUserReposForbidden {
	return &PostUserReposForbidden{}
}

// WriteResponse to the client
func (o *PostUserReposForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
