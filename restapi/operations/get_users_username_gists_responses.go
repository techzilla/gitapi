// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetUsersUsernameGistsOKCode is the HTTP code returned for type GetUsersUsernameGistsOK
const GetUsersUsernameGistsOKCode int = 200

/*GetUsersUsernameGistsOK OK

swagger:response getUsersUsernameGistsOK
*/
type GetUsersUsernameGistsOK struct {

	/*
	  In: Body
	*/
	Payload models.Gists `json:"body,omitempty"`
}

// NewGetUsersUsernameGistsOK creates GetUsersUsernameGistsOK with default headers values
func NewGetUsersUsernameGistsOK() *GetUsersUsernameGistsOK {
	return &GetUsersUsernameGistsOK{}
}

// WithPayload adds the payload to the get users username gists o k response
func (o *GetUsersUsernameGistsOK) WithPayload(payload models.Gists) *GetUsersUsernameGistsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users username gists o k response
func (o *GetUsersUsernameGistsOK) SetPayload(payload models.Gists) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersUsernameGistsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Gists, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetUsersUsernameGistsForbiddenCode is the HTTP code returned for type GetUsersUsernameGistsForbidden
const GetUsersUsernameGistsForbiddenCode int = 403

/*GetUsersUsernameGistsForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getUsersUsernameGistsForbidden
*/
type GetUsersUsernameGistsForbidden struct {
}

// NewGetUsersUsernameGistsForbidden creates GetUsersUsernameGistsForbidden with default headers values
func NewGetUsersUsernameGistsForbidden() *GetUsersUsernameGistsForbidden {
	return &GetUsersUsernameGistsForbidden{}
}

// WriteResponse to the client
func (o *GetUsersUsernameGistsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
