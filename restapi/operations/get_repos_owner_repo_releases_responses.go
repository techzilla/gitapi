// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetReposOwnerRepoReleasesOKCode is the HTTP code returned for type GetReposOwnerRepoReleasesOK
const GetReposOwnerRepoReleasesOKCode int = 200

/*GetReposOwnerRepoReleasesOK OK

swagger:response getReposOwnerRepoReleasesOK
*/
type GetReposOwnerRepoReleasesOK struct {

	/*
	  In: Body
	*/
	Payload models.Releases `json:"body,omitempty"`
}

// NewGetReposOwnerRepoReleasesOK creates GetReposOwnerRepoReleasesOK with default headers values
func NewGetReposOwnerRepoReleasesOK() *GetReposOwnerRepoReleasesOK {
	return &GetReposOwnerRepoReleasesOK{}
}

// WithPayload adds the payload to the get repos owner repo releases o k response
func (o *GetReposOwnerRepoReleasesOK) WithPayload(payload models.Releases) *GetReposOwnerRepoReleasesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repos owner repo releases o k response
func (o *GetReposOwnerRepoReleasesOK) SetPayload(payload models.Releases) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReposOwnerRepoReleasesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Releases, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetReposOwnerRepoReleasesForbiddenCode is the HTTP code returned for type GetReposOwnerRepoReleasesForbidden
const GetReposOwnerRepoReleasesForbiddenCode int = 403

/*GetReposOwnerRepoReleasesForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getReposOwnerRepoReleasesForbidden
*/
type GetReposOwnerRepoReleasesForbidden struct {
}

// NewGetReposOwnerRepoReleasesForbidden creates GetReposOwnerRepoReleasesForbidden with default headers values
func NewGetReposOwnerRepoReleasesForbidden() *GetReposOwnerRepoReleasesForbidden {
	return &GetReposOwnerRepoReleasesForbidden{}
}

// WriteResponse to the client
func (o *GetReposOwnerRepoReleasesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
