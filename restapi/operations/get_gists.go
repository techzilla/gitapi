// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetGistsHandlerFunc turns a function with the right signature into a get gists handler
type GetGistsHandlerFunc func(GetGistsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGistsHandlerFunc) Handle(params GetGistsParams) middleware.Responder {
	return fn(params)
}

// GetGistsHandler interface for that can handle valid get gists params
type GetGistsHandler interface {
	Handle(GetGistsParams) middleware.Responder
}

// NewGetGists creates a new http.Handler for the get gists operation
func NewGetGists(ctx *middleware.Context, handler GetGistsHandler) *GetGists {
	return &GetGists{Context: ctx, Handler: handler}
}

/*GetGists swagger:route GET /gists getGists

List the authenticated user's gists or if called anonymously, this will
return all public gists.


*/
type GetGists struct {
	Context *middleware.Context
	Handler GetGistsHandler
}

func (o *GetGists) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetGistsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
