// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetOrgsOrgTeamsOKCode is the HTTP code returned for type GetOrgsOrgTeamsOK
const GetOrgsOrgTeamsOKCode int = 200

/*GetOrgsOrgTeamsOK OK

swagger:response getOrgsOrgTeamsOK
*/
type GetOrgsOrgTeamsOK struct {

	/*
	  In: Body
	*/
	Payload models.Teams `json:"body,omitempty"`
}

// NewGetOrgsOrgTeamsOK creates GetOrgsOrgTeamsOK with default headers values
func NewGetOrgsOrgTeamsOK() *GetOrgsOrgTeamsOK {
	return &GetOrgsOrgTeamsOK{}
}

// WithPayload adds the payload to the get orgs org teams o k response
func (o *GetOrgsOrgTeamsOK) WithPayload(payload models.Teams) *GetOrgsOrgTeamsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get orgs org teams o k response
func (o *GetOrgsOrgTeamsOK) SetPayload(payload models.Teams) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrgsOrgTeamsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Teams, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetOrgsOrgTeamsForbiddenCode is the HTTP code returned for type GetOrgsOrgTeamsForbidden
const GetOrgsOrgTeamsForbiddenCode int = 403

/*GetOrgsOrgTeamsForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getOrgsOrgTeamsForbidden
*/
type GetOrgsOrgTeamsForbidden struct {
}

// NewGetOrgsOrgTeamsForbidden creates GetOrgsOrgTeamsForbidden with default headers values
func NewGetOrgsOrgTeamsForbidden() *GetOrgsOrgTeamsForbidden {
	return &GetOrgsOrgTeamsForbidden{}
}

// WriteResponse to the client
func (o *GetOrgsOrgTeamsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
