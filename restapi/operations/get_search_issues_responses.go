// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetSearchIssuesOKCode is the HTTP code returned for type GetSearchIssuesOK
const GetSearchIssuesOKCode int = 200

/*GetSearchIssuesOK OK

swagger:response getSearchIssuesOK
*/
type GetSearchIssuesOK struct {

	/*
	  In: Body
	*/
	Payload *models.SearchIssues `json:"body,omitempty"`
}

// NewGetSearchIssuesOK creates GetSearchIssuesOK with default headers values
func NewGetSearchIssuesOK() *GetSearchIssuesOK {
	return &GetSearchIssuesOK{}
}

// WithPayload adds the payload to the get search issues o k response
func (o *GetSearchIssuesOK) WithPayload(payload *models.SearchIssues) *GetSearchIssuesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search issues o k response
func (o *GetSearchIssuesOK) SetPayload(payload *models.SearchIssues) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchIssuesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSearchIssuesForbiddenCode is the HTTP code returned for type GetSearchIssuesForbidden
const GetSearchIssuesForbiddenCode int = 403

/*GetSearchIssuesForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getSearchIssuesForbidden
*/
type GetSearchIssuesForbidden struct {
}

// NewGetSearchIssuesForbidden creates GetSearchIssuesForbidden with default headers values
func NewGetSearchIssuesForbidden() *GetSearchIssuesForbidden {
	return &GetSearchIssuesForbidden{}
}

// WriteResponse to the client
func (o *GetSearchIssuesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
