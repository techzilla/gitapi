// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostReposOwnerRepoMilestonesHandlerFunc turns a function with the right signature into a post repos owner repo milestones handler
type PostReposOwnerRepoMilestonesHandlerFunc func(PostReposOwnerRepoMilestonesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostReposOwnerRepoMilestonesHandlerFunc) Handle(params PostReposOwnerRepoMilestonesParams) middleware.Responder {
	return fn(params)
}

// PostReposOwnerRepoMilestonesHandler interface for that can handle valid post repos owner repo milestones params
type PostReposOwnerRepoMilestonesHandler interface {
	Handle(PostReposOwnerRepoMilestonesParams) middleware.Responder
}

// NewPostReposOwnerRepoMilestones creates a new http.Handler for the post repos owner repo milestones operation
func NewPostReposOwnerRepoMilestones(ctx *middleware.Context, handler PostReposOwnerRepoMilestonesHandler) *PostReposOwnerRepoMilestones {
	return &PostReposOwnerRepoMilestones{Context: ctx, Handler: handler}
}

/*PostReposOwnerRepoMilestones swagger:route POST /repos/{owner}/{repo}/milestones postReposOwnerRepoMilestones

Create a milestone.

*/
type PostReposOwnerRepoMilestones struct {
	Context *middleware.Context
	Handler PostReposOwnerRepoMilestonesHandler
}

func (o *PostReposOwnerRepoMilestones) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostReposOwnerRepoMilestonesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
