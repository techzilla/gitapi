// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetReposOwnerRepoStatsPunchCardHandlerFunc turns a function with the right signature into a get repos owner repo stats punch card handler
type GetReposOwnerRepoStatsPunchCardHandlerFunc func(GetReposOwnerRepoStatsPunchCardParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetReposOwnerRepoStatsPunchCardHandlerFunc) Handle(params GetReposOwnerRepoStatsPunchCardParams) middleware.Responder {
	return fn(params)
}

// GetReposOwnerRepoStatsPunchCardHandler interface for that can handle valid get repos owner repo stats punch card params
type GetReposOwnerRepoStatsPunchCardHandler interface {
	Handle(GetReposOwnerRepoStatsPunchCardParams) middleware.Responder
}

// NewGetReposOwnerRepoStatsPunchCard creates a new http.Handler for the get repos owner repo stats punch card operation
func NewGetReposOwnerRepoStatsPunchCard(ctx *middleware.Context, handler GetReposOwnerRepoStatsPunchCardHandler) *GetReposOwnerRepoStatsPunchCard {
	return &GetReposOwnerRepoStatsPunchCard{Context: ctx, Handler: handler}
}

/*GetReposOwnerRepoStatsPunchCard swagger:route GET /repos/{owner}/{repo}/stats/punch_card getReposOwnerRepoStatsPunchCard

Get the number of commits per hour in each day.
Each array contains the day number, hour number, and number of commits
0-6 Sunday - Saturday
0-23 Hour of day
Number of commits

For example, [2, 14, 25] indicates that there were 25 total commits, during
the 2.00pm hour on Tuesdays. All times are based on the time zone of
individual commits.


*/
type GetReposOwnerRepoStatsPunchCard struct {
	Context *middleware.Context
	Handler GetReposOwnerRepoStatsPunchCardHandler
}

func (o *GetReposOwnerRepoStatsPunchCard) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetReposOwnerRepoStatsPunchCardParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
