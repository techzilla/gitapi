// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetOrgsOrgIssuesOKCode is the HTTP code returned for type GetOrgsOrgIssuesOK
const GetOrgsOrgIssuesOKCode int = 200

/*GetOrgsOrgIssuesOK OK

swagger:response getOrgsOrgIssuesOK
*/
type GetOrgsOrgIssuesOK struct {

	/*
	  In: Body
	*/
	Payload models.Issues `json:"body,omitempty"`
}

// NewGetOrgsOrgIssuesOK creates GetOrgsOrgIssuesOK with default headers values
func NewGetOrgsOrgIssuesOK() *GetOrgsOrgIssuesOK {
	return &GetOrgsOrgIssuesOK{}
}

// WithPayload adds the payload to the get orgs org issues o k response
func (o *GetOrgsOrgIssuesOK) WithPayload(payload models.Issues) *GetOrgsOrgIssuesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get orgs org issues o k response
func (o *GetOrgsOrgIssuesOK) SetPayload(payload models.Issues) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrgsOrgIssuesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Issues, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetOrgsOrgIssuesForbiddenCode is the HTTP code returned for type GetOrgsOrgIssuesForbidden
const GetOrgsOrgIssuesForbiddenCode int = 403

/*GetOrgsOrgIssuesForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getOrgsOrgIssuesForbidden
*/
type GetOrgsOrgIssuesForbidden struct {
}

// NewGetOrgsOrgIssuesForbidden creates GetOrgsOrgIssuesForbidden with default headers values
func NewGetOrgsOrgIssuesForbidden() *GetOrgsOrgIssuesForbidden {
	return &GetOrgsOrgIssuesForbidden{}
}

// WriteResponse to the client
func (o *GetOrgsOrgIssuesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
