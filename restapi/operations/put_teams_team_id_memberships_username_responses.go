// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// PutTeamsTeamIDMembershipsUsernameOKCode is the HTTP code returned for type PutTeamsTeamIDMembershipsUsernameOK
const PutTeamsTeamIDMembershipsUsernameOKCode int = 200

/*PutTeamsTeamIDMembershipsUsernameOK Team member added.

swagger:response putTeamsTeamIdMembershipsUsernameOK
*/
type PutTeamsTeamIDMembershipsUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.TeamMembership `json:"body,omitempty"`
}

// NewPutTeamsTeamIDMembershipsUsernameOK creates PutTeamsTeamIDMembershipsUsernameOK with default headers values
func NewPutTeamsTeamIDMembershipsUsernameOK() *PutTeamsTeamIDMembershipsUsernameOK {
	return &PutTeamsTeamIDMembershipsUsernameOK{}
}

// WithPayload adds the payload to the put teams team Id memberships username o k response
func (o *PutTeamsTeamIDMembershipsUsernameOK) WithPayload(payload *models.TeamMembership) *PutTeamsTeamIDMembershipsUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put teams team Id memberships username o k response
func (o *PutTeamsTeamIDMembershipsUsernameOK) SetPayload(payload *models.TeamMembership) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTeamsTeamIDMembershipsUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutTeamsTeamIDMembershipsUsernameForbiddenCode is the HTTP code returned for type PutTeamsTeamIDMembershipsUsernameForbidden
const PutTeamsTeamIDMembershipsUsernameForbiddenCode int = 403

/*PutTeamsTeamIDMembershipsUsernameForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response putTeamsTeamIdMembershipsUsernameForbidden
*/
type PutTeamsTeamIDMembershipsUsernameForbidden struct {
}

// NewPutTeamsTeamIDMembershipsUsernameForbidden creates PutTeamsTeamIDMembershipsUsernameForbidden with default headers values
func NewPutTeamsTeamIDMembershipsUsernameForbidden() *PutTeamsTeamIDMembershipsUsernameForbidden {
	return &PutTeamsTeamIDMembershipsUsernameForbidden{}
}

// WriteResponse to the client
func (o *PutTeamsTeamIDMembershipsUsernameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// PutTeamsTeamIDMembershipsUsernameUnprocessableEntityCode is the HTTP code returned for type PutTeamsTeamIDMembershipsUsernameUnprocessableEntity
const PutTeamsTeamIDMembershipsUsernameUnprocessableEntityCode int = 422

/*PutTeamsTeamIDMembershipsUsernameUnprocessableEntity If you attempt to add an organization to a team, you will get this.

swagger:response putTeamsTeamIdMembershipsUsernameUnprocessableEntity
*/
type PutTeamsTeamIDMembershipsUsernameUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.OrganizationAsTeamMember `json:"body,omitempty"`
}

// NewPutTeamsTeamIDMembershipsUsernameUnprocessableEntity creates PutTeamsTeamIDMembershipsUsernameUnprocessableEntity with default headers values
func NewPutTeamsTeamIDMembershipsUsernameUnprocessableEntity() *PutTeamsTeamIDMembershipsUsernameUnprocessableEntity {
	return &PutTeamsTeamIDMembershipsUsernameUnprocessableEntity{}
}

// WithPayload adds the payload to the put teams team Id memberships username unprocessable entity response
func (o *PutTeamsTeamIDMembershipsUsernameUnprocessableEntity) WithPayload(payload *models.OrganizationAsTeamMember) *PutTeamsTeamIDMembershipsUsernameUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put teams team Id memberships username unprocessable entity response
func (o *PutTeamsTeamIDMembershipsUsernameUnprocessableEntity) SetPayload(payload *models.OrganizationAsTeamMember) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTeamsTeamIDMembershipsUsernameUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
