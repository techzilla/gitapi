// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteTeamsTeamIDHandlerFunc turns a function with the right signature into a delete teams team ID handler
type DeleteTeamsTeamIDHandlerFunc func(DeleteTeamsTeamIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteTeamsTeamIDHandlerFunc) Handle(params DeleteTeamsTeamIDParams) middleware.Responder {
	return fn(params)
}

// DeleteTeamsTeamIDHandler interface for that can handle valid delete teams team ID params
type DeleteTeamsTeamIDHandler interface {
	Handle(DeleteTeamsTeamIDParams) middleware.Responder
}

// NewDeleteTeamsTeamID creates a new http.Handler for the delete teams team ID operation
func NewDeleteTeamsTeamID(ctx *middleware.Context, handler DeleteTeamsTeamIDHandler) *DeleteTeamsTeamID {
	return &DeleteTeamsTeamID{Context: ctx, Handler: handler}
}

/*DeleteTeamsTeamID swagger:route DELETE /teams/{teamId} deleteTeamsTeamId

Delete team.
In order to delete a team, the authenticated user must be an owner of the
org that the team is associated with.


*/
type DeleteTeamsTeamID struct {
	Context *middleware.Context
	Handler DeleteTeamsTeamIDHandler
}

func (o *DeleteTeamsTeamID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteTeamsTeamIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
