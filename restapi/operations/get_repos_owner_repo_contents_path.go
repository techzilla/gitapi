// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetReposOwnerRepoContentsPathHandlerFunc turns a function with the right signature into a get repos owner repo contents path handler
type GetReposOwnerRepoContentsPathHandlerFunc func(GetReposOwnerRepoContentsPathParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetReposOwnerRepoContentsPathHandlerFunc) Handle(params GetReposOwnerRepoContentsPathParams) middleware.Responder {
	return fn(params)
}

// GetReposOwnerRepoContentsPathHandler interface for that can handle valid get repos owner repo contents path params
type GetReposOwnerRepoContentsPathHandler interface {
	Handle(GetReposOwnerRepoContentsPathParams) middleware.Responder
}

// NewGetReposOwnerRepoContentsPath creates a new http.Handler for the get repos owner repo contents path operation
func NewGetReposOwnerRepoContentsPath(ctx *middleware.Context, handler GetReposOwnerRepoContentsPathHandler) *GetReposOwnerRepoContentsPath {
	return &GetReposOwnerRepoContentsPath{Context: ctx, Handler: handler}
}

/*GetReposOwnerRepoContentsPath swagger:route GET /repos/{owner}/{repo}/contents/{path} getReposOwnerRepoContentsPath

Get contents.
This method returns the contents of a file or directory in a repository.
Files and symlinks support a custom media type for getting the raw content.
Directories and submodules do not support custom media types.
Note: This API supports files up to 1 megabyte in size.
Here can be many outcomes. For details see "http://developer.github.com/v3/repos/contents/"


*/
type GetReposOwnerRepoContentsPath struct {
	Context *middleware.Context
	Handler GetReposOwnerRepoContentsPathHandler
}

func (o *GetReposOwnerRepoContentsPath) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetReposOwnerRepoContentsPathParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
