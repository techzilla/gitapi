// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PatchTeamsTeamIDHandlerFunc turns a function with the right signature into a patch teams team ID handler
type PatchTeamsTeamIDHandlerFunc func(PatchTeamsTeamIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchTeamsTeamIDHandlerFunc) Handle(params PatchTeamsTeamIDParams) middleware.Responder {
	return fn(params)
}

// PatchTeamsTeamIDHandler interface for that can handle valid patch teams team ID params
type PatchTeamsTeamIDHandler interface {
	Handle(PatchTeamsTeamIDParams) middleware.Responder
}

// NewPatchTeamsTeamID creates a new http.Handler for the patch teams team ID operation
func NewPatchTeamsTeamID(ctx *middleware.Context, handler PatchTeamsTeamIDHandler) *PatchTeamsTeamID {
	return &PatchTeamsTeamID{Context: ctx, Handler: handler}
}

/*PatchTeamsTeamID swagger:route PATCH /teams/{teamId} patchTeamsTeamId

Edit team.
In order to edit a team, the authenticated user must be an owner of the org
that the team is associated with.


*/
type PatchTeamsTeamID struct {
	Context *middleware.Context
	Handler PatchTeamsTeamIDHandler
}

func (o *PatchTeamsTeamID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchTeamsTeamIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
