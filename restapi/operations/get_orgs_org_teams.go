// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetOrgsOrgTeamsHandlerFunc turns a function with the right signature into a get orgs org teams handler
type GetOrgsOrgTeamsHandlerFunc func(GetOrgsOrgTeamsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetOrgsOrgTeamsHandlerFunc) Handle(params GetOrgsOrgTeamsParams) middleware.Responder {
	return fn(params)
}

// GetOrgsOrgTeamsHandler interface for that can handle valid get orgs org teams params
type GetOrgsOrgTeamsHandler interface {
	Handle(GetOrgsOrgTeamsParams) middleware.Responder
}

// NewGetOrgsOrgTeams creates a new http.Handler for the get orgs org teams operation
func NewGetOrgsOrgTeams(ctx *middleware.Context, handler GetOrgsOrgTeamsHandler) *GetOrgsOrgTeams {
	return &GetOrgsOrgTeams{Context: ctx, Handler: handler}
}

/*GetOrgsOrgTeams swagger:route GET /orgs/{org}/teams getOrgsOrgTeams

List teams.

*/
type GetOrgsOrgTeams struct {
	Context *middleware.Context
	Handler GetOrgsOrgTeamsHandler
}

func (o *GetOrgsOrgTeams) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetOrgsOrgTeamsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
