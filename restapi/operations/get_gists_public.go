// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetGistsPublicHandlerFunc turns a function with the right signature into a get gists public handler
type GetGistsPublicHandlerFunc func(GetGistsPublicParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGistsPublicHandlerFunc) Handle(params GetGistsPublicParams) middleware.Responder {
	return fn(params)
}

// GetGistsPublicHandler interface for that can handle valid get gists public params
type GetGistsPublicHandler interface {
	Handle(GetGistsPublicParams) middleware.Responder
}

// NewGetGistsPublic creates a new http.Handler for the get gists public operation
func NewGetGistsPublic(ctx *middleware.Context, handler GetGistsPublicHandler) *GetGistsPublic {
	return &GetGistsPublic{Context: ctx, Handler: handler}
}

/*GetGistsPublic swagger:route GET /gists/public getGistsPublic

List all public gists.

*/
type GetGistsPublic struct {
	Context *middleware.Context
	Handler GetGistsPublicHandler
}

func (o *GetGistsPublic) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetGistsPublicParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
