// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetUserFollowersOKCode is the HTTP code returned for type GetUserFollowersOK
const GetUserFollowersOKCode int = 200

/*GetUserFollowersOK OK

swagger:response getUserFollowersOK
*/
type GetUserFollowersOK struct {

	/*
	  In: Body
	*/
	Payload models.Users `json:"body,omitempty"`
}

// NewGetUserFollowersOK creates GetUserFollowersOK with default headers values
func NewGetUserFollowersOK() *GetUserFollowersOK {
	return &GetUserFollowersOK{}
}

// WithPayload adds the payload to the get user followers o k response
func (o *GetUserFollowersOK) WithPayload(payload models.Users) *GetUserFollowersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user followers o k response
func (o *GetUserFollowersOK) SetPayload(payload models.Users) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserFollowersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Users, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetUserFollowersForbiddenCode is the HTTP code returned for type GetUserFollowersForbidden
const GetUserFollowersForbiddenCode int = 403

/*GetUserFollowersForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getUserFollowersForbidden
*/
type GetUserFollowersForbidden struct {
}

// NewGetUserFollowersForbidden creates GetUserFollowersForbidden with default headers values
func NewGetUserFollowersForbidden() *GetUserFollowersForbidden {
	return &GetUserFollowersForbidden{}
}

// WriteResponse to the client
func (o *GetUserFollowersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
