// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/techzilla/gitapi/models"
)

// GetUserEmailsOKCode is the HTTP code returned for type GetUserEmailsOK
const GetUserEmailsOKCode int = 200

/*GetUserEmailsOK OK

swagger:response getUserEmailsOK
*/
type GetUserEmailsOK struct {

	/*
	  In: Body
	*/
	Payload models.UserEmails `json:"body,omitempty"`
}

// NewGetUserEmailsOK creates GetUserEmailsOK with default headers values
func NewGetUserEmailsOK() *GetUserEmailsOK {
	return &GetUserEmailsOK{}
}

// WithPayload adds the payload to the get user emails o k response
func (o *GetUserEmailsOK) WithPayload(payload models.UserEmails) *GetUserEmailsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user emails o k response
func (o *GetUserEmailsOK) SetPayload(payload models.UserEmails) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserEmailsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.UserEmails, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetUserEmailsForbiddenCode is the HTTP code returned for type GetUserEmailsForbidden
const GetUserEmailsForbiddenCode int = 403

/*GetUserEmailsForbidden API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
for details.


swagger:response getUserEmailsForbidden
*/
type GetUserEmailsForbidden struct {
}

// NewGetUserEmailsForbidden creates GetUserEmailsForbidden with default headers values
func NewGetUserEmailsForbidden() *GetUserEmailsForbidden {
	return &GetUserEmailsForbidden{}
}

// WriteResponse to the client
func (o *GetUserEmailsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
