// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IssuesItemsMilestone issues items milestone
// swagger:model issuesItemsMilestone
type IssuesItemsMilestone struct {

	// closed issues
	ClosedIssues int64 `json:"closed_issues,omitempty"`

	// ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
	CreatedAt string `json:"created_at,omitempty"`

	// creator
	Creator *IssuesItemsMilestoneCreator `json:"creator,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ
	DueOn string `json:"due_on,omitempty"`

	// number
	Number int64 `json:"number,omitempty"`

	// open issues
	OpenIssues int64 `json:"open_issues,omitempty"`

	// state
	State interface{} `json:"state,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this issues items milestone
func (m *IssuesItemsMilestone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreator(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IssuesItemsMilestone) validateCreator(formats strfmt.Registry) error {

	if swag.IsZero(m.Creator) { // not required
		return nil
	}

	if m.Creator != nil {

		if err := m.Creator.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creator")
			}
			return err
		}
	}

	return nil
}

var issuesItemsMilestoneTypeStatePropEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["open","closed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		issuesItemsMilestoneTypeStatePropEnum = append(issuesItemsMilestoneTypeStatePropEnum, v)
	}
}

// prop value enum
func (m *IssuesItemsMilestone) validateStateEnum(path, location string, value interface{}) error {
	if err := validate.Enum(path, location, value, issuesItemsMilestoneTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IssuesItemsMilestone) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IssuesItemsMilestone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IssuesItemsMilestone) UnmarshalBinary(b []byte) error {
	var res IssuesItemsMilestone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
